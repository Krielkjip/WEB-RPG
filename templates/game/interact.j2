<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Interact</title>
    <style>
        html, body {
            height: 100%;
            margin: 0;
        }

        body {
            background-color: #18191a;
            color: white;
        }

        .short-text {
            width: 500px;
            word-wrap: break-word;
        }

        .error {
            border: 2px solid red;
            padding: 5px;
            display: inline-block;
        }

        .error-icon {
            color: red;
            margin-right: 5px;
        }

        .top-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-left: 20px;
            padding-right: 20px;
            background-color: #3c1178;
            border-bottom: 2px solid white;
        }

        .container {
            display: flex;
            flex: 1;
            height: calc(100% - 82px);
        }

        .box-1, .box-2 {
            flex: 1;
            padding-left: 20px;
        }

        .box-1 {
            border-right: 2px solid white;
        }

        .button_purple {
            padding: 10px;
            cursor: pointer;
            border: 1px solid white;
            background-color: #3c1178;
            color: white;
            margin-bottom: 4px;
            border-radius: 5px;
        }

        .button_move {
            padding: 10px;
            cursor: pointer;
            border: 1px solid white;
            background-color: #3c1178;
            color: white;
            margin-bottom: 4px;
            width: 40px;
            height: 40px;
            border-radius: 5px;
        }

        .button_gray {
            padding: 10px;
            cursor: pointer;
            border: 1px solid white;
            background-color: #18191a;
            color: white;
            margin-bottom: 4px;
            border-radius: 5px;
        }

        #hover-text {
            display: none;
            position: absolute;
            background-color: #3c1178;
            border: 1px solid white;
            padding: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            font-size: 14px;
            color: white;
            pointer-events: none;
            border-radius: 5px;
        }
    </style>
</head>
<body>
<div class="top-bar">
    <h1>Interact</h1>
    <button class="button_gray" onclick="location.href='/index?command=load current'">Back to map</button>
</div>

<div class="container">
    <div class="box-1">
        <h2>{{ biome_data[1] }}</h2>
        <p class="short-text">{{ biome_data[2] }}</p>

        {% if region_map is none %}
            <p>Region Map is null</p>
        {% else %}
            {% set type_region_map = {
    'Tree': {'char': 'T', 'color': 'green'},
    'Grass': {'char': 'G', 'color': 'lightgreen'},
    'Pebble': {'char': 'P', 'color': 'gray'},
    'Flower': {'char': 'F', 'color': 'violet'},
    'Bush': {'char': 'B', 'color': 'green'},
    'Water': {'char': '~', 'color': 'cyan'},
    'Rock': {'char': 'R', 'color': 'gray'},
    'Moss': {'char': 'M', 'color': 'green'},
    'Dead Tree': {'char': 'T', 'color': 'yellow'},
    'Fungi Tree': {'char': 'T', 'color': 'magenta'},
    'Fungi': {'char': 'F', 'color': 'violet'},
    'Iron Ore': {'char': 'I', 'color': 'orangered'},
    'Snow': {'char': 'S', 'color': 'white'},
    'Deep Snow': {'char': 'D', 'color': 'white'},
    'Ice': {'char': 'I', 'color': 'lightblue'},
    'Sandstone': {'char': 'S', 'color': 'lightyellow'},
    'Sand': {'char': '~', 'color': 'lightyellow'},
    'Cactus': {'char': 'C', 'color': 'lightgreen'},
    'Empty': {'char': '#', 'color': 'gray'},
    'Coal Ore': {'char': 'C', 'color': 'black'},
    'Mud': {'char': 'M', 'color': 'yellow'},
    'Dead Bush': {'char': 'B', 'color': 'yellow'},
    'Magma': {'char': '~', 'color': 'darkorange'},
    'Ash': {'char': '~', 'color': 'gray'},
    'Ash Rock': {'char': 'A', 'color': 'gray'},
    'Sulfur': {'char': 'S', 'color': 'yellow'},
    'Dirt': {'char': 'D', 'color': 'Peru'}
} %}
            {% set type_mobs = {
    'Chicken': {'char': 'C', 'color': 'GoldenRod'}
} %}
            <style>
                .grid-item {
                    width: 15px;
                    height: 15px;
                    padding: 5px;
                    font-weight: bold;
                    border: 2px solid black;
                    text-align: center;
                }

                .player {
                    width: 15px;
                    height: 15px;
                    background-color: rgba(255, 255, 255, 0.2);
                    border: 3px solid yellow;
                    font-weight: bold;
                    text-align: center;
                    padding: 2px;
                }

                table {
                    border-collapse: collapse;
                }

                .hidden-letter {
                    display: none;
                }
            </style>
            {% set region_map_size = writable_map|length %}
            <span id="hover-text"></span>
            <table>
                {% for y in range(region_map_size) %}
                    <tr>
                        {% for x in range(region_map_size) %}
                            {% set tile = writable_map[y][x][0] %}
                            {% set found_mob = writable_map[y][x][1] %}
                            {% set mob = writable_map[y][x][2] %}
                            {% set type_info_map = type_region_map[tile] %}
                            {% set type_info_mob = type_mobs[mob] %}
                            {% if found_mob %}
{#                                TODO: fix blinking tile data-text#}
                                {% if player_state["region_location"][0] == x and player_state["region_location"][1] == y %}
                                    <td class="player">
                                <span class="blinkingText tile"
                                      style="color:{{ type_info_mob['color'] }}"
                                      data-text="{{ mob }}">{{ type_info_mob['char'] }}</span>
                                        <span class="hiddenText hidden-letter tile"
                                              style="color:{{ type_info_map['color'] }}"
                                              data-text="{{ tile }}">{{ type_info_map['char'] }}</span>
                                    </td>
                                {% else %}
                                    <td class="grid-item">
                                <span class="blinkingText tile"
                                      style="color:{{ type_info_mob['color'] }}"
                                      data-text="{{ mob }}">{{ type_info_mob['char'] }}</span>
                                        <span class="hiddenText hidden-letter tile"
                                              style="color:{{ type_info_map['color'] }}"
                                              data-text="{{ tile }}">{{ type_info_map['char'] }}</span>
                                    </td>

                                {% endif %}
                            {% else %}
                                {% if player_state["region_location"][0] == x and player_state["region_location"][1] == y %}
                                    <td class="player tile"
                                        style="color:{{ type_info_map['color'] }}"
                                        data-text="{{ tile }}">{{ type_info_map['char'] }}</td>
                                {% else %}
                                    <td class="grid-item tile"
                                        style="color:{{ type_info_map['color'] }}"
                                        data-text="{{ tile }}">{{ type_info_map['char'] }}</td>
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                    </tr>
                {% endfor %}
            </table>
        {% endif %}
    </div>

    <div class="box-2">
        <H2>Controls</H2>
        <form action="/interact" method="POST">
            <button class="button_move" style="margin-left: 44px;" type="submit" name="interact" value="Move Up">
                ↑
            </button>
            <br>
            <button class="button_move" type="submit" name="interact" value="Move Left">←</button>
            <button class="button_move" style="margin-left: 44px;" type="submit" name="interact" value="Move Right">→
            </button>
            <br>
            <button class="button_move" style="margin-left: 44px;" type="submit" name="interact" value="Move Down">
                ↓
            </button>
        </form>
        <br>
        {% set current_tile = writable_map[player_state["region_location"][1]][player_state["region_location"][0]][0] %}
        <form action="/interact" method="POST">
            {% if current_tile == "Tree" %}
                <button class="button_purple" type="submit" name="interact" value="Cut Tree">Cut Tree</button>
            {% elif current_tile == "Rock" %}
                <button class="button_purple" type="submit" name="interact" value="Mine Rock">Mine Rock</button>
            {% endif %}
        </form>
    </div>
</div>
</body>

<script>
    const tiles = document.querySelectorAll('.tile');
    const hoverText = document.getElementById('hover-text');

    tiles.forEach(tile => {
        tile.addEventListener('mousemove', (e) => {
            hoverText.textContent = tile.getAttribute('data-text');
            hoverText.style.display = 'block';
            hoverText.style.left = `${e.pageX + 10}px`;
            hoverText.style.top = `${e.pageY + 10}px`;
        });
        tile.addEventListener('mouseout', () => {
            hoverText.style.display = 'none';
        });
    });
    setInterval(function () {
        var blinkingTexts = document.querySelectorAll(".blinkingText");
        var hiddenTexts = document.querySelectorAll(".hiddenText");

        blinkingTexts.forEach(function (blinkingText, index) {
            if (blinkingText.style.display === "none") {
                blinkingText.style.display = "inline";
                hiddenTexts[index].style.display = "none";
            } else {
                blinkingText.style.display = "none";
                hiddenTexts[index].style.display = "inline";
            }
        });
    }, 500);
</script>
</html>
